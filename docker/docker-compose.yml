services:
  # ================================
  # INFRASTRUCTURE
  # ================================

  mongodb:
    image: mongo:7.0
    container_name: emailight-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_APP_USERNAME: ${MONGO_APP_USERNAME}
      MONGO_APP_PASSWORD: ${MONGO_APP_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "${MONGO_PORT}:27017"
    networks:
      - emailight-network

  redis:
    image: redis:7.2-alpine
    container_name: emailight-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf:ro
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - emailight-network

  # ================================
  # GLITCHTIP - ERROR MONITORING
  # ================================

  postgres:
    image: postgres:17
    container_name: emailight-postgres
    restart: unless-stopped
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: ${GLITCHTIP_POSTGRES_DB}
      POSTGRES_USER: ${GLITCHTIP_POSTGRES_USER}
      POSTGRES_PASSWORD: ${GLITCHTIP_POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${GLITCHTIP_POSTGRES_PORT}:5432"
    networks:
      - emailight-network

  glitchtip-redis:
    image: valkey/valkey
    container_name: emailight-glitchtip-redis
    restart: unless-stopped
    ports:
      - "${GLITCHTIP_REDIS_PORT}:6379"
    networks:
      - emailight-network

  glitchtip-web:
    image: glitchtip/glitchtip
    container_name: emailight-glitchtip-web
    restart: unless-stopped
    depends_on:
      - postgres
      - glitchtip-redis
    ports:
      - "${GLITCHTIP_WEB_PORT}:8000"
    environment:
      DATABASE_URL: postgres://${GLITCHTIP_POSTGRES_USER}:${GLITCHTIP_POSTGRES_PASSWORD}@postgres:5432/${GLITCHTIP_POSTGRES_DB}
      SECRET_KEY: ${GLITCHTIP_SECRET_KEY}
      PORT: 8000
      EMAIL_URL: ${GLITCHTIP_EMAIL_URL}
      GLITCHTIP_DOMAIN: ${GLITCHTIP_DOMAIN}
      DEFAULT_FROM_EMAIL: ${GLITCHTIP_FROM_EMAIL}
      CELERY_WORKER_AUTOSCALE: "1,3"
      REDIS_URL: redis://glitchtip-redis:6379/0
    volumes:
      - glitchtip_uploads:/code/uploads
    networks:
      - emailight-network

  glitchtip-worker:
    image: glitchtip/glitchtip
    container_name: emailight-glitchtip-worker
    restart: unless-stopped
    command: ./bin/run-celery-with-beat.sh
    depends_on:
      - postgres
      - glitchtip-redis
    environment:
      DATABASE_URL: postgres://${GLITCHTIP_POSTGRES_USER}:${GLITCHTIP_POSTGRES_PASSWORD}@postgres:5432/${GLITCHTIP_POSTGRES_DB}
      SECRET_KEY: ${GLITCHTIP_SECRET_KEY}
      PORT: 8000
      EMAIL_URL: ${GLITCHTIP_EMAIL_URL}
      GLITCHTIP_DOMAIN: ${GLITCHTIP_DOMAIN}
      DEFAULT_FROM_EMAIL: ${GLITCHTIP_FROM_EMAIL}
      CELERY_WORKER_AUTOSCALE: "1,3"
      REDIS_URL: redis://glitchtip-redis:6379/0
    volumes:
      - glitchtip_uploads:/code/uploads
    networks:
      - emailight-network

  glitchtip-migrate:
    image: glitchtip/glitchtip
    container_name: emailight-glitchtip-migrate
    command: ./bin/run-migrate.sh
    depends_on:
      - postgres
      - glitchtip-redis
    environment:
      DATABASE_URL: postgres://${GLITCHTIP_POSTGRES_USER}:${GLITCHTIP_POSTGRES_PASSWORD}@postgres:5432/${GLITCHTIP_POSTGRES_DB}
      SECRET_KEY: ${GLITCHTIP_SECRET_KEY}
      EMAIL_URL: ${GLITCHTIP_EMAIL_URL}
      GLITCHTIP_DOMAIN: ${GLITCHTIP_DOMAIN}
      DEFAULT_FROM_EMAIL: ${GLITCHTIP_FROM_EMAIL}
      REDIS_URL: redis://glitchtip-redis:6379/0
    networks:
      - emailight-network

  # ================================
  # ADMIN INTERFACES
  # ================================

  mongo-express:
    image: mongo-express:latest
    container_name: emailight-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    depends_on:
      - mongodb
    networks:
      - emailight-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: emailight-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: "local:redis:6379:0:${REDIS_PASSWORD}"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
      HTTP_USER: ${REDIS_COMMANDER_USER}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD}
    ports:
      - "${REDIS_COMMANDER_PORT}:8081"
    depends_on:
      - redis
    networks:
      - emailight-network

# ====================
# VOLUMES PERSISTANTS
# ====================
volumes:
  mongodb_data:
    labels:
      - emailight
  redis_data:
    labels:
      - emailight
  postgres_data:
    labels:
      - emailight
  glitchtip_uploads:
    labels:
      - emailight

# ====================
# RÃ‰SEAU DU PROJET
# ====================
networks:
  emailight-network:
    name: emailight-network
    driver: bridge