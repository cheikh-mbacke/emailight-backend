{
  "name": "emailight-backend",
  "version": "1.0.0",
  "private": true,
  "description": "Backend microservices pour Emailight - Application de reformulation d'emails par IA",
  "keywords": [
    "emailight",
    "microservices",
    "nodejs",
    "email",
    "ai",
    "reformulation"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/cheikh-mbacke/emailight-backend.git"
  },
  "license": "MIT",
  "author": "Mbacke Cheikh",
  "scripts": {
    "clean": "docker compose -f docker/docker-compose.yml down -v --remove-orphans",
    "clean:all": "docker compose -f docker/docker-compose.yml down -v --remove-orphans && docker volume prune -f --filter label=emailight && docker network prune -f --filter name=emailight",
    "clean:containers": "docker compose -f docker/docker-compose.yml down --remove-orphans",
    "clean:network": "docker network prune -f",
    "clean:volumes": "docker compose -f docker/docker-compose.yml down -v",
    "clean:force": "docker compose -f docker/docker-compose.yml --project-name emailight down -v --remove-orphans || true && docker rm -f $(docker ps -aq --filter name=emailight-) 2>/dev/null || true",
    "create-structure": "node scripts/create-structure.js",
    "dev": "docker compose -f docker/docker-compose.yml up -d",
    "postdev": "node scripts/post-dev-message.js",
    "dev:infra": "docker compose -f docker/docker-compose.yml up -d mongodb redis postgres glitchtip-redis",
    "dev:services": "docker compose -f docker/docker-compose.yml up -d user-service",
    "dev:admin": "docker compose -f docker/docker-compose.yml up -d mongo-express redis-commander",
    "dev:glitch": "docker compose -f docker/docker-compose.yml up -d postgres glitchtip-redis glitchtip-web glitchtip-worker glitchtip-migrate",
    "format": "npm run format:user",
    "format:user": "cd user-service && npm run format",
    "lint": "npm run lint:user",
    "lint:user": "cd user-service && npm run lint",
    "logs": "docker compose -f docker/docker-compose.yml logs -f",
    "logs:mongo": "docker compose -f docker/docker-compose.yml logs -f mongodb",
    "logs:redis": "docker compose -f docker/docker-compose.yml logs -f redis",
    "logs:glitch": "docker compose -f docker/docker-compose.yml logs -f glitchtip-web glitchtip-worker",
    "logs:postgres": "docker compose -f docker/docker-compose.yml logs -f postgres",
    "logs:user": "docker compose -f docker/docker-compose.yml logs -f user-service",
    "logs:clean:user": "sudo truncate -s 0 $(docker inspect --format='{{.LogPath}}' $(docker ps -aqf 'name=user-service'))",
    "restart": "docker compose -f docker/docker-compose.yml restart",
    "restart:glitch": "docker compose -f docker/docker-compose.yml restart glitchtip-web glitchtip-worker",
    "restart:user": "docker compose -f docker/docker-compose.yml restart user-service",
    "setup": "node scripts/setup.js",
    "status": "node scripts/status.js",
    "status:raw": "docker compose -f docker/docker-compose.yml ps",
    "stop": "docker compose -f docker/docker-compose.yml down",
    "stop:glitch": "docker compose -f docker/docker-compose.yml stop glitchtip-web glitchtip-worker glitchtip-migrate",
    "stop:user": "docker compose -f docker/docker-compose.yml stop user-service",
    "test": "npm run test:user",
    "test:user": "cd user-service && npm run test",
    "build": "npm run build:user",
    "build:user": "docker compose -f docker/docker-compose.yml build user-service"
  },
  "devDependencies": {
    "eslint": "^9.29.0",
    "prettier": "^3.6.1"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}